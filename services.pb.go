// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: services.proto

package daobackup

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileType int32

const (
	FileType_NormalFile   FileType = 0
	FileType_Directory    FileType = 1
	FileType_SymbolicLink FileType = 2
	FileType_HardLink     FileType = 3
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "NormalFile",
		1: "Directory",
		2: "SymbolicLink",
		3: "HardLink",
	}
	FileType_value = map[string]int32{
		"NormalFile":   0,
		"Directory":    1,
		"SymbolicLink": 2,
		"HardLink":     3,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_services_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{0}
}

type ChunkMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        uint64                 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkMeta) Reset() {
	*x = ChunkMeta{}
	mi := &file_services_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkMeta) ProtoMessage() {}

func (x *ChunkMeta) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkMeta.ProtoReflect.Descriptor instead.
func (*ChunkMeta) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{0}
}

func (x *ChunkMeta) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ChunkMeta) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ChunkMeta) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type FileMeta struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Type             FileType               `protobuf:"varint,1,opt,name=type,proto3,enum=daobackup.FileType" json:"type,omitempty"`
	Hash             []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size             uint64                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Name             string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Owner            string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Group            string                 `protobuf:"bytes,6,opt,name=group,proto3" json:"group,omitempty"`
	Mode             uint32                 `protobuf:"varint,7,opt,name=mode,proto3" json:"mode,omitempty"`
	ModificationTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=modification_time,json=modificationTime,proto3" json:"modification_time,omitempty"`
	CreationTime     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	Chunks           []*ChunkMeta           `protobuf:"bytes,10,rep,name=chunks,proto3" json:"chunks,omitempty"`
	DirectoryEntries map[string][]byte      `protobuf:"bytes,11,rep,name=directory_entries,json=directoryEntries,proto3" json:"directory_entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FileMeta) Reset() {
	*x = FileMeta{}
	mi := &file_services_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMeta) ProtoMessage() {}

func (x *FileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMeta.ProtoReflect.Descriptor instead.
func (*FileMeta) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{1}
}

func (x *FileMeta) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_NormalFile
}

func (x *FileMeta) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *FileMeta) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileMeta) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *FileMeta) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FileMeta) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileMeta) GetModificationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModificationTime
	}
	return nil
}

func (x *FileMeta) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *FileMeta) GetChunks() []*ChunkMeta {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *FileMeta) GetDirectoryEntries() map[string][]byte {
	if x != nil {
		return x.DirectoryEntries
	}
	return nil
}

type BackupRoot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Previous      []byte                 `protobuf:"bytes,1,opt,name=previous,proto3" json:"previous,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RootDirectory []byte                 `protobuf:"bytes,4,opt,name=root_directory,json=rootDirectory,proto3" json:"root_directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupRoot) Reset() {
	*x = BackupRoot{}
	mi := &file_services_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRoot) ProtoMessage() {}

func (x *BackupRoot) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRoot.ProtoReflect.Descriptor instead.
func (*BackupRoot) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{2}
}

func (x *BackupRoot) GetPrevious() []byte {
	if x != nil {
		return x.Previous
	}
	return nil
}

func (x *BackupRoot) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *BackupRoot) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *BackupRoot) GetRootDirectory() []byte {
	if x != nil {
		return x.RootDirectory
	}
	return nil
}

type HashedBlob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Blob          []byte                 `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HashedBlob) Reset() {
	*x = HashedBlob{}
	mi := &file_services_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashedBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashedBlob) ProtoMessage() {}

func (x *HashedBlob) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashedBlob.ProtoReflect.Descriptor instead.
func (*HashedBlob) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{3}
}

func (x *HashedBlob) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *HashedBlob) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

type RPCStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succes        bool                   `protobuf:"varint,1,opt,name=succes,proto3" json:"succes,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCStatus) Reset() {
	*x = RPCStatus{}
	mi := &file_services_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCStatus) ProtoMessage() {}

func (x *RPCStatus) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCStatus.ProtoReflect.Descriptor instead.
func (*RPCStatus) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{4}
}

func (x *RPCStatus) GetSucces() bool {
	if x != nil {
		return x.Succes
	}
	return false
}

func (x *RPCStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Hash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hash) Reset() {
	*x = Hash{}
	mi := &file_services_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{5}
}

func (x *Hash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

var File_services_proto protoreflect.FileDescriptor

var file_services_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x09,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x84, 0x04, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x43, 0x0a, 0x15, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x6f, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x6f,
	0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x22, 0x34, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x68, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0x3d, 0x0a, 0x09, 0x52, 0x50, 0x43, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x2a, 0x49, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x48, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x03, 0x32, 0xb0, 0x01, 0x0a,
	0x09, 0x44, 0x41, 0x4f, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x50, 0x75,
	0x74, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x15, 0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x1a, 0x14, 0x2e, 0x64,
	0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x52, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x6f,
	0x62, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x48, 0x61,
	0x73, 0x68, 0x1a, 0x14, 0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x52,
	0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x15, 0x2e, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x22, 0x00, 0x42,
	0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x74, 0x2f, 0x64, 0x61, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_services_proto_rawDescOnce sync.Once
	file_services_proto_rawDescData []byte
)

func file_services_proto_rawDescGZIP() []byte {
	file_services_proto_rawDescOnce.Do(func() {
		file_services_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_proto_rawDesc), len(file_services_proto_rawDesc)))
	})
	return file_services_proto_rawDescData
}

var file_services_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_services_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_services_proto_goTypes = []any{
	(FileType)(0),                 // 0: daobackup.FileType
	(*ChunkMeta)(nil),             // 1: daobackup.ChunkMeta
	(*FileMeta)(nil),              // 2: daobackup.FileMeta
	(*BackupRoot)(nil),            // 3: daobackup.BackupRoot
	(*HashedBlob)(nil),            // 4: daobackup.HashedBlob
	(*RPCStatus)(nil),             // 5: daobackup.RPCStatus
	(*Hash)(nil),                  // 6: daobackup.Hash
	nil,                           // 7: daobackup.FileMeta.DirectoryEntriesEntry
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_services_proto_depIdxs = []int32{
	0, // 0: daobackup.FileMeta.type:type_name -> daobackup.FileType
	8, // 1: daobackup.FileMeta.modification_time:type_name -> google.protobuf.Timestamp
	8, // 2: daobackup.FileMeta.creation_time:type_name -> google.protobuf.Timestamp
	1, // 3: daobackup.FileMeta.chunks:type_name -> daobackup.ChunkMeta
	7, // 4: daobackup.FileMeta.directory_entries:type_name -> daobackup.FileMeta.DirectoryEntriesEntry
	8, // 5: daobackup.BackupRoot.timestamp:type_name -> google.protobuf.Timestamp
	4, // 6: daobackup.DAOBackup.PutBlob:input_type -> daobackup.HashedBlob
	6, // 7: daobackup.DAOBackup.CheckBlob:input_type -> daobackup.Hash
	6, // 8: daobackup.DAOBackup.GetBlob:input_type -> daobackup.Hash
	5, // 9: daobackup.DAOBackup.PutBlob:output_type -> daobackup.RPCStatus
	5, // 10: daobackup.DAOBackup.CheckBlob:output_type -> daobackup.RPCStatus
	4, // 11: daobackup.DAOBackup.GetBlob:output_type -> daobackup.HashedBlob
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_services_proto_init() }
func file_services_proto_init() {
	if File_services_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_proto_rawDesc), len(file_services_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_proto_goTypes,
		DependencyIndexes: file_services_proto_depIdxs,
		EnumInfos:         file_services_proto_enumTypes,
		MessageInfos:      file_services_proto_msgTypes,
	}.Build()
	File_services_proto = out.File
	file_services_proto_goTypes = nil
	file_services_proto_depIdxs = nil
}
